// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model dla leadów - główna tabela
model Lead {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Dane osobowe
  firstName String
  lastName  String?
  phone     String
  email     String?
  
  // Dane o aucie
  company     String // Marka i model auta
  jobTitle    String // Rok produkcji
  industry    String // Typ dywaników (3D EVAPREMIUM Z/BEZ RANTÓW)
  completeness String // Rodzaj kompletu
  
  // Dane śledzenia
  sessionId   String
  utmSource   String?
  utmMedium   String?
  utmCampaign String?
  utmTerm     String?
  utmContent  String?
  referrer    String?
  gclid       String?
  fbclid      String?
  firstVisit  DateTime
  currentUrl  String
  userAgent   String
  
  // Status i priorytet
  status   LeadStatus @default(PENDING)
  priority Priority   @default(MEDIUM)
  
  // Przypisanie do agenta
  assignedTo String?
  
  // Analityka
  responseTime      Int? // Czas odpowiedzi w godzinach
  contactAttempts   Int  @default(0)
  lastContactAttempt DateTime?
  conversionValue   Float? // Wartość konwersji w PLN
  
  // Relacje
  notes     LeadNote[]
  tasks     Task[]
  history   LeadHistory[]
  
  // Indeksy dla szybkiego wyszukiwania
  @@index([status])
  @@index([priority])
  @@index([utmSource])
  @@index([utmCampaign])
  @@index([createdAt])
  @@index([assignedTo])
  @@index([phone])
  @@index([sessionId])
}

// Model dla notatek do leadów
model LeadNote {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  
  leadId    String
  userId    String
  content   String
  type      NoteType @default(GENERAL)
  isPrivate Boolean  @default(false)
  
  // Relacje
  lead Lead @relation(fields: [leadId], references: [id], onDelete: Cascade)
  user CrmUser @relation(fields: [userId], references: [id])
  
  @@index([leadId])
  @@index([userId])
}

// Model dla zadań (tasks)
model Task {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  leadId     String
  assignedTo String
  title      String
  description String?
  type       TaskType @default(CALL)
  priority   Priority @default(MEDIUM)
  status     TaskStatus @default(PENDING)
  dueDate    DateTime
  completedAt DateTime?
  
  // Relacje
  lead Lead @relation(fields: [leadId], references: [id], onDelete: Cascade)
  user CrmUser @relation(fields: [assignedTo], references: [id])
  
  @@index([leadId])
  @@index([assignedTo])
  @@index([status])
  @@index([dueDate])
}

// Model dla użytkowników CRM
model CrmUser {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  email     String   @unique
  firstName String
  lastName  String
  password  String
  role      UserRole @default(AGENT)
  permissions String[]
  isActive  Boolean  @default(true)
  lastLogin DateTime?
  
  // Relacje
  notes     LeadNote[]
  tasks     Task[]
  history   LeadHistory[]
  
  @@index([email])
  @@index([role])
  @@index([isActive])
}

// Model dla historii zmian leadów
model LeadHistory {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  
  leadId    String
  userId    String?
  action    String
  field     String?
  oldValue  String?
  newValue  String?
  
  // Relacje
  lead Lead @relation(fields: [leadId], references: [id], onDelete: Cascade)
  user CrmUser? @relation(fields: [userId], references: [id])
  
  @@index([leadId])
  @@index([userId])
  @@index([createdAt])
}

// Model dla szablonów emaili
model EmailTemplate {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  name        String
  subject     String
  body        String
  variables   String[] // Dostępne zmienne do podmiany
  category    EmailCategory @default(CUSTOM)
  isActive    Boolean @default(true)
  
  @@index([category])
  @@index([isActive])
}

// Model dla automatyzacji
model Automation {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  name        String
  description String?
  trigger     AutomationTrigger
  conditions  Json // Warunki w formacie JSON
  actions     Json // Akcje w formacie JSON
  isActive    Boolean @default(true)
  lastRun     DateTime?
  
  @@index([trigger])
  @@index([isActive])
}

// Model dla raportów
model Report {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  name        String
  description String?
  filters     Json
  schedule    ReportSchedule?
  recipients  String[]
  lastGenerated DateTime?
  isActive    Boolean @default(true)
  
  @@index([schedule])
  @@index([isActive])
}

// Model dla webhooków
model Webhook {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  name      String
  url       String
  events    String[]
  isActive  Boolean @default(true)
  secretKey String?
  retryCount Int @default(3)
  lastDelivery DateTime?
  
  @@index([url])
  @@index([isActive])
}

// Model dla powiadomień
model Notification {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  
  userId    String
  type      NotificationType
  title     String
  message   String
  data      Json?
  isRead    Boolean @default(false)
  readAt    DateTime?
  
  // Relacje
  user CrmUser @relation(fields: [userId], references: [id])
  
  @@index([userId])
  @@index([type])
  @@index([isRead])
  @@index([createdAt])
}

// Enums
enum LeadStatus {
  PENDING    // Oczekujący
  CONTACTED  // Skontaktowany
  CONVERTED  // Skonwertowany
  LOST       // Stracony
  SPAM       // Spam
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum NoteType {
  GENERAL    // Ogólna
  CALL       // Telefon
  EMAIL      // Email
  MEETING    // Spotkanie
  FOLLOWUP   // Follow-up
}

enum TaskType {
  CALL       // Telefon
  EMAIL      // Email
  MEETING    // Spotkanie
  FOLLOWUP   // Follow-up
  RESEARCH   // Badania
  CUSTOM     // Własne
}

enum TaskStatus {
  PENDING      // Oczekujący
  IN_PROGRESS  // W trakcie
  COMPLETED    // Ukończony
  CANCELLED    // Anulowany
}

enum UserRole {
  ADMIN    // Administrator
  MANAGER  // Manager
  AGENT    // Agent
}

enum EmailCategory {
  WELCOME    // Powitalny
  FOLLOWUP   // Follow-up
  REMINDER   // Przypomnienie
  OFFER      // Oferta
  CUSTOM     // Własny
}

enum AutomationTrigger {
  LEAD_CREATED      // Lead utworzony
  STATUS_CHANGED    // Status zmieniony
  PRIORITY_CHANGED  // Priorytet zmieniony
  TIME_BASED        // Czasowo
}

enum ReportSchedule {
  DAILY     // Codziennie
  WEEKLY    // Co tydzień
  MONTHLY   // Co miesiąc
}

enum NotificationType {
  LEAD_ASSIGNED        // Lead przypisany
  LEAD_STATUS_CHANGED  // Status leada zmieniony
  TASK_DUE            // Zadanie do wykonania
  REPORT_READY        // Raport gotowy
  SYSTEM              // Systemowe
}
